#!/bin/bash

#
# Reference
# https://kubernetes.io/ko/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
# https://github.com/containerd/containerd/blob/main/docs/getting-started.md
#

#
# [packages]
#
dnf install -y iptables conntrack socat iproute-tc

#
# [containerd]
#
wget "https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-${OS}-${ARCH}.tar.gz" -O containerd.tar.gz -q
tar Cxzf /usr/local containerd.tar.gz
cat > /etc/systemd/system/containerd.service <<EOF 
${SYSTEMD_CONTAINERD_SERVICE}
EOF
mkdir -p /etc/containerd
cat > /etc/containerd/config.toml <<EOF
${CONTAINERD_CONFIG}
EOF

#
# [runc]
#
wget "https://github.com/opencontainers/runc/releases/download/v${RUNC_VERSION}/runc.${ARCH}" -O /usr/bin/runc -q
chmod 755 /usr/bin/runc

#
# [CNI-plugins]
#
wget "https://github.com/containernetworking/plugins/releases/download/v${ENI_PLUGINS_VERSION}/cni-plugins-${OS}-${ARCH}-v${ENI_PLUGINS_VERSION}.tgz" -O cni-plugins -q
mkdir -p /opt/cni/bin
tar Cxzf /opt/cni/bin cni-plugins
mkdir -p /etc/cni/net.d/
cat > /etc/cni/net.d/10-containerd-net.conflist <<EOF
${ENI_PLUGINS_BASIC_CONFIG}
EOF

#
# [crictl]
#
wget "https://github.com/kubernetes-sigs/cri-tools/releases/download/v${CRICTL_VERSION}/crictl-v${CRICTL_VERSION}-linux-${ARCH}.tar.gz" -O crictl.tar.gz -q
tar Cxzf /usr/local/bin/ crictl.tar.gz

#
# [kubeadm, kubelet, kubectl]
#
wget "https://dl.k8s.io/release/v${KUBERNETES_RELEASE}/bin/${OS}/${ARCH}/"{kubeadm,kubelet,kubectl} -P /usr/bin -q
chmod +x /usr/bin/{kubeadm,kubelet,kubectl}
cat > /etc/systemd/system/kubelet.service <<EOF 
${SYSTEMD_KUBELET_SERVICE}
EOF
mkdir -p /etc/systemd/system/kubelet.service.d
cat > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf <<EOF 
${SYSTEMD_KUBELET_DROPIN_FOR_KUBEADM}
EOF

#
# set system-module
#
cat > /etc/modules-load.d/kubernetes.conf <<EOF
overlay
br_netfilter
EOF
modprobe overlay
modprobe br_netfilter
cat > /etc/sysctl.d/10-kubernetes.conf <<EOF
  net.ipv4.ip_forward                 = 1
  net.bridge.bridge-nf-call-ip6tables = 1
  net.bridge.bridge-nf-call-iptables  = 1
EOF
sysctl --system
swapoff -a
systemctl daemon-reload
systemctl enable --now containerd
systemctl enable kubelet

#
# [kubeadm]
#
kubeadm init --pod-network-cidr=192.168.0.0/16

METADATA_TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"`
CLUSTER_API_ENDPOINT=$(curl -H "X-aws-ec2-metadata-token: $METADATA_TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4):6443
CLUSTER_JOIN_TOKEN=$(kubeadm token list | awk 'NR>=2 {printf "%s", $1}')
CLUSTER_CA_HASH=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt -noout | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 | awk '{print $2}')
aws ssm put-parameter \
  --name ${CLUSTER_JOIN_KEY_PARAM} \
  --value $CLUSTER_API_ENDPOINT,$CLUSTER_JOIN_TOKEN,$CLUSTER_CA_HASH \
  --type SecureString \
  --overwrite \
  --region ap-northeast-2

#
# [KUBECTL]
#
mkdir -p /root/.kube
cp -i /etc/kubernetes/admin.conf /root/.kube/config 
chown $(id -u):$(id -g) /root/.kube/config
